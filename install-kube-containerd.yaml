- hosts: "masters, workers"
  remote_user: root
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: yes
  connection: ssh

  tasks:
     - name: Disables the UFW firewall.
       command: ufw disable

     - name: Deactivates swap.
       command: swapoff -a

     - name: Removes the swap entry from the /etc/fstab file.
       command: sed -i '/swap/d' /etc/fstab

     - name: Creates an empty configuration file for Containerd.
       file:
         path: "/etc/modules-load.d/containerd.conf"
         state: "touch"

     - name: Adds overlay and br_netfilter to the Containerd configuration file.
       blockinfile:
         path: "/etc/modules-load.d/containerd.conf"
         block: |
               overlay
               br_netfilter

     - name: Loads kernel modules for overlay and br_netfilter.
       shell: |
               sudo modprobe overlay
               sudo modprobe br_netfilter

     - name: Creates an empty sysctl configuration file.
       file:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         state: "touch"

     - name: Adds networking-related configurations to the sysctl configuration file.
       blockinfile:
         path: "/etc/sysctl.d/99-kubernetes-cri.conf"
         block: |
                net.bridge.bridge-nf-call-iptables = 1
                net.ipv4.ip_forward = 1
                net.bridge.bridge-nf-call-ip6tables = 1

     - name: Applies system configurations.
       command: sudo sysctl --system

     - name: Adds the Docker GPG key to the system.
       shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
 
     - name: Adds the Kubernetes GPG key to the system.
       shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

     - name: Adds the Docker repository to the apt sources.
       shell: echo "deb https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list
 
     - name: Adds the Kubernetes repository to the apt sources.
       shell: echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list

     - name: Updates the package cache.
       apt:
         update_cache: yes
       become: yes

     - name: Installs Helm only on the master nodes.
       shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | sudo bash
       when: inventory_hostname in groups['masters']

     - name: Install the kubeadm package.
       apt:
         name: kubeadm
         state: present
 
     - name: Install the kubelet package.
       apt:
         name: kubelet
         state: present
 
     - name: Install the kubectl package.
       apt:
         name: kubectl
         state: present
 
     - name: Install the containerd.io package.
       apt:
         name: containerd.io
         state: present

     - name: Run containerd config default.
       shell: containerd config default | tee /etc/containerd/config.toml
 
     - name: Modify SystemdCgroup setting in Containerd configuration.
       shell: sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml

     - name: Creates an empty YAML file for the CRI-O container runtime.
       file:
         path: "/etc/crictl.yaml"
         state: "touch"

     - name: Adds configurations to the CRI-O container runtime configuration file.
       blockinfile:
         path: "/etc/crictl.yaml"
         block: |
                runtime-endpoint: unix:///var/run/containerd/containerd.sock
                image-endpoint: unix:///var/run/containerd/containerd.sock
                timeout: 30
                debug: false

     - name: Restart Containerd service.
       systemd:
         name: containerd
         state: restarted

     - name: Check Containerd service status.
       systemd:
         name: containerd
         state: started
       register: containerd_status
 
     - name: Ensure Containerd status is active.
       fail:
         msg: "Containerd service is not in the 'active' state."
       when: containerd_status.changed

     - name: Appends Kubernetes-related source commands and aliases to the ~/.profile file for master nodes.
       blockinfile:
         path: ~/.profile
         block: |
           source <(kubectl completion bash)
           source <(kubeadm completion bash)
           source <(crictl completion bash)
           source <(helm completion bash)
           alias k=kubectl
           complete -F __start_kubectl k
           export KUBE_EDITOR=nano
           export NOW="--force --grace-period 0"
       when: inventory_hostname in groups['masters']

     - name: Appends Kubernetes-related source commands and aliases to the ~/.profile file for worker nodes.
       blockinfile:
         path: ~/.profile
         block: |
           source <(kubectl completion bash)
           source <(kubeadm completion bash)
           source <(crictl completion bash)
           alias k=kubectl
           complete -F __start_kubectl k
           export KUBE_EDITOR=nano
           export NOW="--force --grace-period 0"
       when: inventory_hostname in groups['workers']

     - name: Reloads the ~/.profile file to apply the changes.
       shell: source ~/.profile
       args:
         executable: /bin/bash
